services:
  redis:
    image: redis:7.4.0-alpine
    ports:
      - ${REDIS_PORT}:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass $REDIS_PASSWORD
    environment:
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}

  rq-dashboard:
    image: cjlapao/rq-dashboard:0.8.0
    ports:
      - '9181:9181'
    environment:
      RQ_DASHBOARD_REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379

  db:
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGUSER: ${DB_USER}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${DB_NAME}"]
      interval: 5s
      timeout: 60s
      retries: 5
      start_period: 5s
    volumes:
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  pgadmin:
    image: dpage/pgadmin4:2023-11-20-2
    ports:
      - 8080:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=postgres@example.com
      - PGADMIN_DEFAULT_PASSWORD=postgres
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    user: root
    configs:
      - source: servers
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass

configs:
  pgpass:
    content: db:5432:*:${DB_USER}:${DB_PASSWORD}
  servers:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "Local",
        "Host": "db",
        "Port": 5432,
        "MaintenanceDB": "postgres",
        "Username": "${DB_USER}",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}

volumes:
  pgadmin-data: